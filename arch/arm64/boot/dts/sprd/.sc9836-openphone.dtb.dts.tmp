# 0 "arch/arm64/boot/dts/sprd/sc9836-openphone.dts"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "arch/arm64/boot/dts/sprd/sc9836-openphone.dts"
# 9 "arch/arm64/boot/dts/sprd/sc9836-openphone.dts"
/dts-v1/;

# 1 "arch/arm64/boot/dts/sprd/sc9836.dtsi" 1
# 9 "arch/arm64/boot/dts/sprd/sc9836.dtsi"
# 1 "arch/arm64/boot/dts/sprd/sharkl64.dtsi" 1
# 9 "arch/arm64/boot/dts/sprd/sharkl64.dtsi"
/ {
 interrupt-parent = <&gic>;
 #address-cells = <2>;
 #size-cells = <2>;

 soc {
  compatible = "simple-bus";
  #address-cells = <2>;
  #size-cells = <2>;
  ranges;

  ap-apb {
   compatible = "simple-bus";
   #address-cells = <2>;
   #size-cells = <2>;
   ranges;

   uart0: serial@70000000 {
    compatible = "sprd,sc9836-uart";
    reg = <0 0x70000000 0 0x100>;
    interrupts = <0 2 0xf04>;
    clocks = <&clk26mhz>;
    status = "disabled";
   };

   uart1: serial@70100000 {
    compatible = "sprd,sc9836-uart";
    reg = <0 0x70100000 0 0x100>;
    interrupts = <0 3 0xf04>;
    clocks = <&clk26mhz>;
    status = "disabled";
   };

   uart2: serial@70200000 {
    compatible = "sprd,sc9836-uart";
    reg = <0 0x70200000 0 0x100>;
    interrupts = <0 4 0xf04>;
    clocks = <&clk26mhz>;
    status = "disabled";
   };

   uart3: serial@70300000 {
    compatible = "sprd,sc9836-uart";
    reg = <0 0x70300000 0 0x100>;
    interrupts = <0 5 0xf04>;
    clocks = <&clk26mhz>;
    status = "disabled";
   };
  };
 };

 clk26mhz: clk26mhz {
  compatible = "fixed-clock";
  #clock-cells = <0>;
  clock-frequency = <26000000>;
 };
};
# 10 "arch/arm64/boot/dts/sprd/sc9836.dtsi" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h" 1
# 9 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h"
# 1 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/irq.h" 1
# 10 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h" 2
# 11 "arch/arm64/boot/dts/sprd/sc9836.dtsi" 2

/ {
 compatible = "sprd,sc9836";

 cpus {
  #address-cells = <2>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   reg = <0x0 0x0>;
   enable-method = "psci";
  };

  cpu1: cpu@1 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   reg = <0x0 0x1>;
   enable-method = "psci";
  };

  cpu2: cpu@2 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   reg = <0x0 0x2>;
   enable-method = "psci";
  };

  cpu3: cpu@3 {
   device_type = "cpu";
   compatible = "arm,cortex-a53";
   reg = <0x0 0x3>;
   enable-method = "psci";
  };
 };

 etf@10003000 {
  compatible = "arm,coresight-tmc", "arm,primecell";
  reg = <0 0x10003000 0 0x1000>;
  clocks = <&clk26mhz>;
  clock-names = "apb_pclk";
  in-ports {
   port {
    etf_in: endpoint {
     remote-endpoint = <&funnel_out_port0>;
    };
   };
  };
 };

 funnel@10001000 {
  compatible = "arm,coresight-dynamic-funnel", "arm,primecell";
  reg = <0 0x10001000 0 0x1000>;
  clocks = <&clk26mhz>;
  clock-names = "apb_pclk";

  out-ports {
   port {
    funnel_out_port0: endpoint {
     remote-endpoint = <&etf_in>;
    };
   };
  };

  in-ports {
   #address-cells = <1>;
   #size-cells = <0>;

   port@0 {
    reg = <0>;
    funnel_in_port0: endpoint {
     remote-endpoint = <&etm0_out>;
    };
   };

   port@1 {
    reg = <1>;
    funnel_in_port1: endpoint {
     remote-endpoint = <&etm1_out>;
    };
   };

   port@2 {
    reg = <2>;
    funnel_in_port2: endpoint {
     remote-endpoint = <&etm2_out>;
    };
   };

   port@3 {
    reg = <3>;
    funnel_in_port3: endpoint {
     remote-endpoint = <&etm3_out>;
    };
   };

   port@4 {
    reg = <4>;
    funnel_in_port4: endpoint {
     remote-endpoint = <&stm_out>;
    };
   };

  };
 };

 etm@10440000 {
  compatible = "arm,coresight-etm4x", "arm,primecell";
  reg = <0 0x10440000 0 0x1000>;

  cpu = <&cpu0>;
  clocks = <&clk26mhz>;
  clock-names = "apb_pclk";
  out-ports {
   port {
    etm0_out: endpoint {
     remote-endpoint = <&funnel_in_port0>;
    };
   };
  };
 };

 etm@10540000 {
  compatible = "arm,coresight-etm4x", "arm,primecell";
  reg = <0 0x10540000 0 0x1000>;

  cpu = <&cpu1>;
  clocks = <&clk26mhz>;
  clock-names = "apb_pclk";
  out-ports {
   port {
    etm1_out: endpoint {
     remote-endpoint = <&funnel_in_port1>;
    };
   };
  };
 };

 etm@10640000 {
  compatible = "arm,coresight-etm4x", "arm,primecell";
  reg = <0 0x10640000 0 0x1000>;

  cpu = <&cpu2>;
  clocks = <&clk26mhz>;
  clock-names = "apb_pclk";
  out-ports {
   port {
    etm2_out: endpoint {
     remote-endpoint = <&funnel_in_port2>;
    };
   };
  };
 };

 etm@10740000 {
  compatible = "arm,coresight-etm4x", "arm,primecell";
  reg = <0 0x10740000 0 0x1000>;

  cpu = <&cpu3>;
  clocks = <&clk26mhz>;
  clock-names = "apb_pclk";
  out-ports {
   port {
    etm3_out: endpoint {
     remote-endpoint = <&funnel_in_port3>;
    };
   };
  };
 };

 stm@10006000 {
  compatible = "arm,coresight-stm", "arm,primecell";
  reg = <0 0x10006000 0 0x1000>,
        <0 0x01000000 0 0x180000>;
  reg-names = "stm-base", "stm-stimulus-base";
  clocks = <&clk26mhz>;
  clock-names = "apb_pclk";
  out-ports {
   port {
    stm_out: endpoint {
     remote-endpoint = <&funnel_in_port4>;
    };
   };
  };
 };

 gic: interrupt-controller@12001000 {
  compatible = "arm,gic-400";
  reg = <0 0x12001000 0 0x1000>,
        <0 0x12002000 0 0x2000>,
        <0 0x12004000 0 0x2000>,
        <0 0x12006000 0 0x2000>;
  #interrupt-cells = <3>;
  interrupt-controller;
  interrupts = <1 9 ((((1 << (4)) - 1) << 8) | 4)>;
 };

 psci {
  compatible = "arm,psci";
  method = "smc";
  cpu_on = <0xc4000003>;
  cpu_off = <0x84000002>;
  cpu_suspend = <0xc4000001>;
 };

 timer {
  compatible = "arm,armv8-timer";
  interrupts = <1 13 ((((1 << (4)) - 1) << 8) | 8)>,
        <1 14 ((((1 << (4)) - 1) << 8) | 8)>,
        <1 11 ((((1 << (4)) - 1) << 8) | 8)>,
        <1 10 ((((1 << (4)) - 1) << 8) | 8)>;
 };
};
# 12 "arch/arm64/boot/dts/sprd/sc9836-openphone.dts" 2

/ {
 model = "Spreadtrum SC9836 Openphone Board";

 compatible = "sprd,sc9836-openphone", "sprd,sc9836";

 aliases {
  serial0 = &uart0;
  serial1 = &uart1;
  serial2 = &uart2;
  serial3 = &uart3;
 };

 memory@80000000 {
  device_type = "memory";
  reg = <0 0x80000000 0 0x20000000>;
 };

 chosen {
  stdout-path = "serial1:115200n8";
 };
};

&uart0 {
 status = "okay";
};

&uart1 {
 status = "okay";
};

&uart2 {
 status = "okay";
};

&uart3 {
 status = "okay";
};
